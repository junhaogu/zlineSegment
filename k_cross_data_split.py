# -*- coding: utf-8 -*-
"""k_cross_data_split

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1dOEGUl4v3dNwJf1Wp6kMHZXtrnrziCDE
"""

from torch.utils.data import TensorDataset
import torch

def k_cross_data_split(sample_data, mask_data, batch_size,fold,kf):
  foldsize=sample_data.shape[0]//kf
  train_image=torch.zeros([1,3,256,512]).type(torch.float)
  train_mask=torch.zeros([1,1,256,512]).type(torch.float)
  for j in range(kf):
    if fold!=j:
      if j!=kf-1:
        train_image=torch.cat((train_image,sample_data[j*foldsize:(j+1)*foldsize,:,:,:]),0)
        train_mask=torch.cat((train_mask,mask[j*foldsize:(j+1)*foldsize,:,:,:]),0)
      else:
        train_image=torch.cat((train_image,sample_data[j*foldsize:,:,:,:]),0)
        train_mask=torch.cat((train_mask,mask[j*foldsize:,:,:,:]),0)
  if fold!=kf-1:
    test_image=sample_data[fold*foldsize:(fold+1)*foldsize,:,:,:]
    test_mask=mask[fold*foldsize:(fold+1)*foldsize,:,:,:]
  else:
    test_image=sample_data[fold*foldsize:,:,:,:]
    test_mask=mask[fold*foldsize:,:,:,:]
  train_data=TensorDataset(train_image[1:,:,:,:], train_mask[1:,:,:,:])
  test_data=TensorDataset(test_image[1:,:,:,:], test_mask[1:,:,:,:])
  return train_data, test_data